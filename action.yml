runs:
  using: "composite"
  steps:
    - name: Create vendor cache folder
      shell: bash
      run: mkdir -p "${{ inputs.cache_dir }}"

    - name: Restore cache if found
      shell: bash
      run: |
        HASH="${{ inputs.hash_prefix }}_${{ hashFiles('composer.json', 'composer.lock') }}"
        COMPOSER_CACHE="${{ inputs.cache_dir }}/${HASH}.tgz"
        echo "COMPOSER_CACHE=${COMPOSER_CACHE}" >> $GITHUB_ENV        
        if [ -e "${COMPOSER_CACHE}" ]; then        
          echo "Cache HIT, restoring vendor folder from cache"
          rm -rf vendor
          touch -a "${COMPOSER_CACHE}"          
          tar -xpzf "${COMPOSER_CACHE}"
        else
          echo "Cache MISS"
        fi

    - name: Composer install
      shell: bash
      run: |
        composer install ${{ inputs.composer_install_options }}

    - name: Save cache (and validate)
      shell: bash
      run: |
        if [ ! -f "${COMPOSER_CACHE}" ]; then
          mkdir -p "$(dirname "${COMPOSER_CACHE}")"
          tar -cpzf "${COMPOSER_CACHE}" vendor
        
          echo "Validating newly created cache tarball..."
          if ! tar -tzf "${COMPOSER_CACHE}" > /dev/null; then
            echo "New cache tarball is invalid, removing it..."
            rm -f "${COMPOSER_CACHE}"
            exit 1
          fi
        fi
